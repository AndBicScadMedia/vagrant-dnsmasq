# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure('2') do |config|
  config.vm.box = 'precise64'
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  # dnsmasq works with both, private network as well as public network
  # config.vm.network :private_network, ip: "192.168.59.100"
  config.vm.network :public_network


  # dnsmasq ...

  # set domain ending (required)
  # adding this line enables dnsmasq handling
  config.dnsmasq.domain = '.dev'

  # optional configuration ...

  # this plugin runs 'hostname -I' on the guest machine to obtain
  # the guest ip address. you can overwrite this behaviour.
  # config.dnsmasq.ip = '192.168.59.100'

  # config.dnsmasq.ip = proc do |guest_machine| 
  #   guest_machine.communicate.sudo("command to obtain ip somehow") do |type, data| 
  #     # return something like '192.168.59.100' or ['192.168.59.100', '192.168.59.103']
  #     return data['ip']
  #   end
  # end

  # this will prompt you during 'vagrant up' to choose an IP
  # config.dnsmasq.ip = ['192.168.59.100', '192.168.59.103']

  # overwrite default location for /etc/resolver directory
  # config.dnsmasq.resolver = '/etc/resolver'

  # overwrite default location for /usr/local/etc/dnsmasq.conf
  brew_prefix = `brew --prefix`.strip
  config.dnsmasq.dnsmasqconf = brew_prefix + '/etc/dnsmasq.conf'

  # disable dnsmasq handling
  # config.dnsmasq.disable = true

end